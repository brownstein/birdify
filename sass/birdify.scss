/*
 * Birdify - CSS for flappy text
 */
@import "birdify_mixins.scss"; // import Birdify

/* Birds are bound to inline-block styles to prevent wings from doing anything odd */
.birdified{	
	display: inline-block;
	.wing{
		display: inline-block;
	}
}

/* Bird-candidates are pre-wrapped spans that are waiting to become birds */
.bird-candidate{
	display: inline;
	span{
		display: inline;
	}
}

/* Definitions for perenthesis-winged birds */
.birdified.with-paren{
	@include flapWings(0.3s, false, true);
}

/* Definitions for text-winged birds */
.birdified.with-text{
	@include flapWings(0.5s, false, false);
}

/* Definition of flightpaths-1 through flightpath-6 */
.birdified{
	@for $i from 1 through 6 {
		&.flightpath-#{$i} {
			@include followFlightPath("birdPath-#{$i}", 1.5s + $i*0.2s);
		}
	}
}

/* Definitions of keyframes for flightpaths 1-6 */
@for $i from 1 through 6{
	$final_x: -800px;
	$final_y: sin($i) * 100px;
	@if (floor($i/2) == $i/2){
		$final_x: 800px;
	}
	$x1: cos($i)*20px;
	$x2: cos($i*4)*40px + $final_x*0.1;
	$y1: 10px + 10px * sin($i);
	$y2: 40px + 20px * sin($i*9);

	@include buildFlightPath("birdPath-#{$i}", $x1,$y1,$x2,$y2,$final_x,$final_y,16);
}
